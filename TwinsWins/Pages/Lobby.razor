@page "/lobby"

<PageTitle>Weather forecast</PageTitle>

@using Microsoft.AspNetCore.SignalR.Client
@using TwinsWins.Data
@inject WeatherForecastService ForecastService
@inject NavigationManager Navigation

<button class="btn btn-primary" @onclick="StartNewGame">New Game</button>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Player ID</th>
                <th>Stake</th>
                <th>Date</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast>? forecasts;
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        forecasts = new List<WeatherForecast>(); 
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/signalrhub"))
            .Build();

        hubConnection.On<WeatherForecast>("ReceiveNewGame", (newGame) =>
        {
            forecasts.Add(newGame);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task StartNewGame()
    {
        if (hubConnection != null)
        {
            await hubConnection.SendAsync("NewGame");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
        {
            await hubConnection.DisposeAsync();
        }
    }
   }
